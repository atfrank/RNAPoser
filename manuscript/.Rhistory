dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.0+shift ,0.4+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE)
par(fig=(scale)*c(0.23+shift, 0.47+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "")
par(fig=(scale)*c(0.45+shift, 0.85+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
xray <- plot_clscores(file = "poses_classification_scores_xray.txt", pred = TRUE, ylab = "CLscore", plotname = "")
d1 <- read.table("poses_classification_scores_xray.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.45+shift, 0.85+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE)
par(fig=(scale)*c(0.23+0.45+shift, 0.85+0.07+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "")
dev.new(width=9.777778, height=10.375000)
scale <- 1
shift <- 0.0
shifty <- 0.3
par(fig=(scale)*c(0.0+shift ,0.4+shift, 0.0+shifty, 0.5+shifty), new=FALSE)
nmr <- plot_clscores(file = "poses_classification_scores_xray_loo.txt", pred = TRUE, ylab = "CLscore", plotname = "")
d1 <- read.table("poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.0+shift ,0.4+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE)
par(fig=(scale)*c(0.23+shift, 0.47+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "")
par(fig=(scale)*c(0.45+shift, 0.85+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
xray <- plot_clscores(file = "poses_classification_scores_xray.txt", pred = TRUE, ylab = "CLscore", plotname = "")
d1 <- read.table("poses_classification_scores_xray.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.45+shift, 0.85+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE)
par(fig=(scale)*c(0.23+0.45+shift, 0.85+0.07+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "")
dev.new(width=9.777778, height=10.375000)
scale <- 1
shift <- 0.0
shifty <- 0.3
par(fig=(scale)*c(0.0+shift ,0.4+shift, 0.0+shifty, 0.5+shifty), new=FALSE)
nmr <- plot_clscores(file = "poses_classification_scores_xray_loo.txt", pred = TRUE, ylab = "CLscore", plotname = "")
d1 <- read.table("poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.0+shift ,0.4+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE)
par(fig=(scale)*c(0.23+shift, 0.47+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "")
par(fig=(scale)*c(0.45+shift, 0.85+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
xray <- plot_clscores(file = "poses_classification_scores_xray.txt", pred = TRUE, ylab = "CLscore", plotname = "")
d1 <- read.table("poses_classification_scores_xray.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.45+shift, 0.85+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE)
par(fig=(scale)*c(0.23+0.45+shift, 0.85+0.07+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "")
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.new(width=9.777778, height=10.375000)
scale <- 1
shift <- 0.0
shifty <- 0.3
par(fig=(scale)*c(0.0+shift ,0.4+shift, 0.0+shifty, 0.5+shifty), new=FALSE)
nmr <- plot_clscores(file = "poses_classification_scores_xray_loo.txt", pred = TRUE, ylab = "CLscore", plotname = "")
dev.new(width=9.777778, height=10.375000)
scale <- 1
shift <- 0.0
shifty <- 0.3
par(fig=(scale)*c(0.0+shift ,0.4+shift, 0.0+shifty, 0.5+shifty), new=FALSE)
nmr <- plot_clscores(file = "poses_classification_scores_xray_loo.txt", pred = TRUE, ylab = "CLscore", plotname = "")
dev.new(width=9.777778, height=10.375000)
scale <- 1
shift <- 0.0
shifty <- 0.3
par(fig=(scale)*c(0.0+shift ,0.4+shift, 0.0+shifty, 0.5+shifty), new=FALSE)
nmr <- plot_clscores(file = "poses_classification_scores_xray_loo.txt", pred = TRUE, ylab = "CLscore", plotname = "")
d1 <- read.table("poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.0+shift ,0.4+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE)
par(fig=(scale)*c(0.23+shift, 0.47+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "")
par(fig=(scale)*c(0.45+shift, 0.85+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
xray <- plot_clscores(file = "poses_classification_scores_xray.txt", pred = TRUE, ylab = "CLscore", plotname = "")
d1 <- read.table("poses_classification_scores_xray.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.45+shift, 0.85+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE)
par(fig=(scale)*c(0.23+0.45+shift, 0.85+0.07+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "")
dev.new(width=9.777778, height=10.375000)
scale <- 1
shift <- 0.0
shifty <- 0.3
par(fig=(scale)*c(0.0+shift ,0.4+shift, 0.0+shifty, 0.5+shifty), new=FALSE)
nmr <- plot_clscores(file = "poses_classification_scores_xray_loo.txt", pred = TRUE, ylab = "CLscore", plotname = "")
d1 <- read.table("poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.0+shift ,0.4+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE)
par(fig=(scale)*c(0.23+shift, 0.47+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "")
par(fig=(scale)*c(0.45+shift, 0.85+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
xray <- plot_clscores(file = "poses_classification_scores_xray_loo.txt", pred = TRUE, ylab = "CLscore", plotname = "")
d1 <- read.table("poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.45+shift, 0.85+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE)
par(fig=(scale)*c(0.23+0.45+shift, 0.85+0.07+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "")
dev.copy2pdf(file = "clscore.pdf")
dev.new(width=9.777778, height=10.375000)
scale <- 1
shift <- 0.0
shifty <- 0.3
par(fig=(scale)*c(0.0+shift ,0.4+shift, 0.0+shifty, 0.5+shifty), new=FALSE)
nmr <- plot_clscores(file = "poses_classification_scores_xray_loo.txt", pred = TRUE, ylab = "CLscore", plotname = "")
d1 <- read.table("poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.0+shift ,0.4+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE)
par(fig=(scale)*c(0.23+shift, 0.47+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "")
par(fig=(scale)*c(0.45+shift, 0.85+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
xray <- plot_clscores(file = "poses_classification_scores_xray_loo.txt", pred = TRUE, ylab = "CLscore", plotname = "")
d1 <- read.table("poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.45+shift, 0.85+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE)
par(fig=(scale)*c(0.23+0.45+shift, 0.85+0.07+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "")
dev.copy2pdf(file = "clscore.pdf")
dev.new(width=9.777778, height=10.375000)
scale <- 1
shift <- 0.0
shifty <- 0.3
par(fig=(scale)*c(0.0+shift ,0.4+shift, 0.0+shifty, 0.5+shifty), new=FALSE)
nmr <- plot_clscores(file = "poses_classification_scores_xray_loo.txt", pred = TRUE, ylab = "CLscore", plotname = "")
d1 <- read.table("poses_classification_scores_xray_loo.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.0+shift ,0.4+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE)
par(fig=(scale)*c(0.23+shift, 0.47+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "")
par(fig=(scale)*c(0.45+shift, 0.85+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
xray <- plot_clscores(file = "poses_classification_scores_xray_valid.txt", pred = TRUE, ylab = "CLscore", plotname = "")
d1 <- read.table("poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.45+shift, 0.85+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE)
par(fig=(scale)*c(0.23+0.45+shift, 0.85+0.07+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "")
dev.copy2pdf(file = "clscore.pdf")
?boxplot
setwd("~/Documents/GitHub/RNAPoser/manuscript/")
# pose classification
plot_clscores <- function(file, pred = TRUE, ylab = "", plotname = ""){
# read in data
data <- read.table(file, col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
data$status <- 0
# chose whether to plot classification scores for the actual best or predicted best
if(pred){
data$status[data$cs_pred>0.5] <- 1
data$cs <- data$cs_pred
data$rmsd <- data$rmsd_pred
} else {
data$status[data$cs_true>0.5] <- 1
data$cs <- data$cs_true
data$rmsd <- data$rmsd_true
}
# setup of color scheme
data$color <- "red"
data$color[data$status == 1] <- "forestgreen"
# make plot (note: suppressed automatic tick labels)
plot(data$rmsd, data$cs, lwd = "1", bg = data$color, pch = 21, xaxt = "n", yaxt = "n", ylim = c(0.0  , 1.0), xlim =c (0, 10), ylab = ylab, xlab = "RMSD (Å)", main = plotname)
# customize tick labels for x-axis
# see: https://www.statmethods.net/advgraphs/axes.html
axis(1, at=seq(0, 10, 2),labels=c("0.0", "2.0", "4.0", "6.0", "8.0", "10.0"), col.axis="black", las=2)
# customize tick labels for y-axis
axis(2, at=c(0, 0.25, 0.50, 0.75, 1.0), labels=c("0.00", "0.25", "0.50", "0.75", "1.00"), col.axis="black", las=2)
abline(h=0.5, lwd = "1", lty = "dotted")
abline(v=2.5, lwd = "1", lty = "dotted")
#abline(v=mean(data$rmsd[data$status==0]), lwd = "1", lty = "dashed", col = "red")
#abline(v=mean(data$rmsd[data$status==1]), lwd = "1", lty = "dashed", col = "forestgreen")
#points(data$rmsd, data$cs, lwd = "0", bg = data$color, pch = 21, ylim = c(0.0, 1.0), xlim =c (0, 10), ylab = ylab, xlab = "RMSD (Å)", main = plotname)
return(data)
}
# pose classification
plot_distribution_clscores <- function(pred = TRUE, ylab = ""){
d1 <- read.table("poses_classification_scores_xray_loo.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
d2 <- read.table("poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
d1$grp <- "nmr"
d2$grp <- "xray"
d3 <- rbind(d1, d2)
d3$grp <- "all"
data <- rbind(d1, d2, d3)
if(pred){
data$cs <- data$cs_pred
} else {
data$cs <- data$cs_true
}
boxplot(cs~grp, data = data, yaxt = "n", ylim = c(0.0, 1.0), col=c("white", "gray7 0", "gray30"), ylab = ylab)
axis(2, at=c(0, 0.25, 0.50, 0.75, 1.0), labels=c("0.00", "0.25", "0.50", "0.75", "1.00"), col.axis="black", las=2)
#abline(h=0.5, lwd = "1", lty = "dotted")
return(data)
}
# new figures
# dev size: 9.777778 10.375000
dev.new(width=9.777778, height=10.375000)
scale <- 1
shift <- 0.0
shifty <- 0.3
par(fig=(scale)*c(0.0+shift ,0.4+shift, 0.0+shifty, 0.5+shifty), new=FALSE)
nmr <- plot_clscores(file = "poses_classification_scores_xray_loo.txt", pred = TRUE, ylab = "CLscore", plotname = "")
d1 <- read.table("poses_classification_scores_xray_loo.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.0+shift ,0.4+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE, outline = FALSE)
par(fig=(scale)*c(0.23+shift, 0.47+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "", outline = FALSE)
par(fig=(scale)*c(0.45+shift, 0.85+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
xray <- plot_clscores(file = "poses_classification_scores_xray_valid.txt", pred = TRUE, ylab = "CLscore", plotname = "")
d1 <- read.table("poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
dy <- 0.30
ya <- 0.265
yb <- ya+dy
par(fig=(scale)*c(0.45+shift, 0.85+shift, ya+shifty, yb+shifty), new=TRUE)
boxplot(d1$rmsd_pred, axes=FALSE, xaxt = "n", ylim = c(0.0, 10.0), ylab = "", las = 2, horizontal = TRUE)
par(fig=(scale)*c(0.23+0.45+shift, 0.85+0.07+shift, 0.0+shifty, 0.5+shifty), new=TRUE)
boxplot(d1$cs_pred, axes=FALSE, yaxt = "n", ylim = c(0.0, 1.0), ylab = "")
dev.copy2pdf(file = "clscore.pdf")
stop()
setwd("~/Documents/GitHub/RNAPoser/manuscript/")
# read data
data <- read.table("chemical_similarity.txt", col.names = c("pdbid", "comp", "tanimoto"))
head(data)
data <- read.table("chemical_similarity.txt", col.names = c("pdbid", "comp", "tanimoto"))
loo <- plot_clscores(file = "poses_classification_scores_xray_loo.txt", pred = TRUE, ylab = "CLscore", plotname = "")
valid <- plot_clscores(file = "poses_classification_scores_xray_valid.txt", pred = TRUE, ylab = "CLscore", plotname = "")
all <- rbind(loo, valid)
loo <- read.table(file = "poses_classification_scores_xray_loo.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
valid <- read.table(file = "poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
all <- rbind(loo, valid)
data <- data[!(data$pdbid == data$comp),]
loo_names <- as.character(loo$id)
valid_names <- as.character(valid$id)
setwd("~/Documents/GitHub/RNAPoser/manuscript/")
# read data
data <- read.table("chemical_similarity.txt", col.names = c("pdbid", "comp", "tanimoto"))
# remove diagonal were ref is comp
data$pdbid <- as.character(data$pdbid)
data$comp <- as.character(data$comp)
data <- data[!(data$pdbid == data$comp),]
# get summary statistics
loo <- read.table(file = "poses_classification_scores_xray_loo.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
valid <- read.table(file = "poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
all <- rbind(loo, valid)
loo_names <- as.character(loo$id)
valid_names <- as.character(valid$id)
setwd("~/Documents/GitHub/RNAPoser/manuscript/")
# read data
data <- read.table("chemical_similarity.txt", col.names = c("pdbid", "comp", "tanimoto"))
# remove diagonal were ref is comp
data$pdbid <- as.character(data$pdbid)
data$comp <- as.character(data$comp)
data <- data[!(data$pdbid == data$comp),]
# get summary statistics
loo <- read.table(file = "poses_classification_scores_xray_loo.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
loo$method <- "loo"
valid <- read.table(file = "poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
valid$method <- "valid"
all <- rbind(loo, valid)
loo_names <- as.character(loo$id)
valid_names <- as.character(valid$id)
data$method <- "other"
data$method[data$pdbid %in% loo_names] <- "loo"
data$method[data$pdbid %in% valid_names] <- "valid"
data <- data[(data$pdbid %in% c(loo_names, valid_names)), ]
rownames(data) <- 1:nrow(data)
data
setwd("~/Documents/GitHub/RNAPoser/manuscript/")
# read data
data <- read.table("chemical_similarity.txt", col.names = c("pdbid", "comp", "tanimoto"))
# remove diagonal were ref is comp
data$pdbid <- as.character(data$pdbid)
data$comp <- as.character(data$comp)
data <- data[!(data$pdbid == data$comp),]
data
setwd("~/Documents/GitHub/RNAPoser/manuscript/")
# read data
data <- read.table("chemical_similarity.txt", col.names = c("pdbid", "comp", "tanimoto"))
# remove diagonal were ref is comp
data$pdbid <- as.character(data$pdbid)
data$comp <- as.character(data$comp)
data <- data[!(data$pdbid == data$comp),]
# get summary statistics
loo <- read.table(file = "poses_classification_scores_xray_loo.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
loo$method <- "loo"
valid <- read.table(file = "poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
valid$method <- "valid"
all <- rbind(loo, valid)
loo_names <- toupper(as.character(loo$id))
valid_names <- toupper(as.character(valid$id))
data$method <- "other"
data$method[data$pdbid %in% loo_names] <- "loo"
data$method[data$pdbid %in% valid_names] <- "valid"
data
loo_names
setwd("~/Documents/GitHub/RNAPoser/manuscript/")
# read data
data <- read.table("chemical_similarity.txt", col.names = c("pdbid", "comp", "tanimoto"))
# remove diagonal were ref is comp
data$pdbid <- as.character(data$pdbid)
data$comp <- as.character(data$comp)
data <- data[!(data$pdbid == data$comp),]
# get summary statistics
loo <- read.table(file = "poses_classification_scores_xray_loo.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
loo$method <- "loo"
valid <- read.table(file = "poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
valid$method <- "valid"
all <- rbind(loo, valid)
loo_names <- toupper(as.character(loo$pdbid))
valid_names <- toupper(as.character(valid$pdbid))
data$method <- "other"
data$method[data$pdbid %in% loo_names] <- "loo"
data$method[data$pdbid %in% valid_names] <- "valid"
data <- data[(data$pdbid %in% c(loo_names, valid_names)), ]
rownames(data) <- 1:nrow(data)
data
tmp <- plyr::ddply(.data = data, .variables = c("pdbid", "method"), .fun = function(x){data.frame(max_tanimoto = round(max(x$tanimoto), 2), mean_tanimoto = round(mean(x$tanimoto), 2))})
boxplot(max_tanimoto~method, data = tmp, ylim = c(0, 1))
tmp <- merge(all, tmp, by = c("pdbid"))
tmp <- tmp[order(tmp$max_tanimoto), ]
tmp
tmp_loo <- tmp[tmp$method=="loo", c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred", "max_tanimoto", "mean_tanimoto")]
tmp_valid <- tmp[tmp$method=="valid", c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred", "max_tanimoto", "mean_tanimoto")]
tmp_valid
tmp_loo
tmp
tmp$method=="loo"
tmp <- merge(all, tmp, by = c("pdbid", "method"))
tmp <- tmp[order(tmp$max_tanimoto), ]
tmp <- merge(all, tmp, by = c("pdbid", "method"))
tmp <- merge(all, tmp, by = c("pdbid"))
tmp
setwd("~/Documents/GitHub/RNAPoser/manuscript/")
# read data
data <- read.table("chemical_similarity.txt", col.names = c("pdbid", "comp", "tanimoto"))
# remove diagonal were ref is comp
data$pdbid <- as.character(data$pdbid)
data$comp <- as.character(data$comp)
data <- data[!(data$pdbid == data$comp),]
# get summary statistics
loo <- read.table(file = "poses_classification_scores_xray_loo.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
valid <- read.table(file = "poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
all <- rbind(loo, valid)
loo_names <- toupper(as.character(loo$pdbid))
valid_names <- toupper(as.character(valid$pdbid))
data$method <- "other"
data$method[data$pdbid %in% loo_names] <- "loo"
data$method[data$pdbid %in% valid_names] <- "valid"
data <- data[(data$pdbid %in% c(loo_names, valid_names)), ]
rownames(data) <- 1:nrow(data)
# get the maximum tanimoto score
tmp <- plyr::ddply(.data = data, .variables = c("pdbid", "method"), .fun = function(x){data.frame(max_tanimoto = round(max(x$tanimoto), 2), mean_tanimoto = round(mean(x$tanimoto), 2))})
boxplot(max_tanimoto~method, data = tmp, ylim = c(0, 1))
# compare with
tmp <- merge(all, tmp, by = c("pdbid"))
tmp <- tmp[order(tmp$max_tanimoto), ]
tmp_loo <- tmp[tmp$method=="loo", c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred", "max_tanimoto", "mean_tanimoto")]
tmp_valid <- tmp[tmp$method=="valid", c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred", "max_tanimoto", "mean_tanimoto")]
tmp_loo
setwd("~/Documents/GitHub/RNAPoser/manuscript/")
# read data
data <- read.table("chemical_similarity.txt", col.names = c("pdbid", "comp", "tanimoto"))
# remove diagonal were ref is comp
data$pdbid <- as.character(data$pdbid)
data$comp <- as.character(data$comp)
data <- data[!(data$pdbid == data$comp),]
# get summary statistics
loo <- read.table(file = "poses_classification_scores_xray_loo.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
valid <- read.table(file = "poses_classification_scores_xray_valid.txt", col.names = c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred"))
all <- rbind(loo, valid)
loo_names <- toupper(as.character(loo$pdbid))
valid_names <- toupper(as.character(valid$pdbid))
data$method <- "other"
data$method[data$pdbid %in% loo_names] <- "loo"
data$method[data$pdbid %in% valid_names] <- "valid"
data <- data[(data$pdbid %in% c(loo_names, valid_names)), ]
rownames(data) <- 1:nrow(data)
# get the maximum tanimoto score
tmp <- plyr::ddply(.data = data, .variables = c("pdbid", "method"), .fun = function(x){data.frame(max_tanimoto = round(max(x$tanimoto), 2), mean_tanimoto = round(mean(x$tanimoto), 2))})
boxplot(max_tanimoto~method, data = tmp, ylim = c(0, 1))
# compare with
tmp <- merge(all, tmp, by = c("pdbid"))
tmp <- tmp[order(tmp$max_tanimoto), ]
tmp_loo <- tmp[tmp$method=="loo", c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred", "max_tanimoto", "mean_tanimoto")]
tmp_valid <- tmp[tmp$method=="valid", c("pdbid", "cs_true", "rmsd_true", "cs_pred", "rmsd_pred", "max_tanimoto", "mean_tanimoto")]
write.table(tmp_loo, file = "similarity_plus_recovery_loo.txt", quote = FALSE, row.names = FALSE)
write.table(tmp_valid, file = "similarity_plus_recovery_valid.txt", quote = FALSE, row.names = FALSE)
success <- NULL
success_loo <- NULL
success_valid <- NULL
threshold <- seq(0.3, 1, 0.1)
for (t in threshold){
which <- tmp$max_tanimoto < t+0.05 & tmp$max_tanimoto > t-0.05
success <- c(success, mean(tmp$rmsd_pred[which]))
which <- tmp_loo$max_tanimoto < t+0.05 & tmp_loo$max_tanimoto > t-0.05
success_loo <- c(success_loo, mean(tmp_loo$rmsd_pred[which]))
which <- tmp_valid$max_tanimoto < t+0.05 & tmp_valid$max_tanimoto > t-0.05
success_valid <- c(success_valid, mean(tmp_valid$rmsd_pred[which]))
}
success <- data.frame(threshold, success, success_loo, success_valid)
plot(success$threshold, success$success, type = "l", lwd = "2", ylim = c(0, 10.0))
lines(success$threshold, success$success_loo, type = "l", lwd = "2", col = "cyan")
lines(success$threshold, success$success_valid, type = "l", lwd = "2", col = "blue")
cor(tmp_valid$rmsd_pred, tmp_valid$max_tanimoto)
cor(tmp_valid$rmsd_pred, tmp_valid$max_tanimoto, method = "kendall")
cor(tmp_valid$rmsd_pred, tmp_valid$max_tanimoto, method = "kendall")
cor(tmp_valid$rmsd_pred, tmp_valid$max_tanimoto, method = "kendall")
cor(tmp_valid$rmsd_pred, tmp_valid$mean_tanimoto, method = "kendall")
plot(tmp_valid$rmsd_pred, tmp_valid$max_tanimoto
)
plot(success$threshold, success$success, type = "l", lwd = "2", ylim = c(0, 10.0))
lines(success$threshold, success$success_loo, type = "l", lwd = "2", col = "cyan")
lines(success$threshold, success$success_valid, type = "l", lwd = "2", col = "blue")
plot(success$threshold, success$success, type = "l", lwd = "2", ylim = c(0, 10.0))
lines(success$threshold, success$success_valid, type = "l", lwd = "2", col = "blue")
success$success_valid
success <- NULL
success_loo <- NULL
success_valid <- NULL
threshold <- seq(0.3, 1, 0.1)
for (t in threshold){
which <- tmp$max_tanimoto < t+0.05 & tmp$max_tanimoto > t-0.05
success <- c(success, mean(tmp$rmsd_pred[which], na.rm = TRUE))
which <- tmp_loo$max_tanimoto < t+0.05 & tmp_loo$max_tanimoto > t-0.05
success_loo <- c(success_loo, mean(tmp_loo$rmsd_pred[which], na.rm = TRUE))
which <- tmp_valid$max_tanimoto < t+0.05 & tmp_valid$max_tanimoto > t-0.05
success_valid <- c(success_valid, mean(tmp_valid$rmsd_pred[which], na.rm = TRUE))
}
success <- data.frame(threshold, success, success_loo, success_valid)
plot(success$threshold, success$success, type = "l", lwd = "2", ylim = c(0, 10.0))
lines(success$threshold, success$success_loo, type = "l", lwd = "2", col = "cyan")
lines(success$threshold, success$success_valid, type = "l", lwd = "2", col = "blue")
success_valid
t <- 0.3
tmp_loo$max_tanimoto < t+0.05
tmp_loo$max_tanimoto < t+0.05 & tmp_loo$max_tanimoto > t-0.05
plot(success$threshold, success$success, type = "s", lwd = "2", ylim = c(0, 10.0))
plot(success$threshold, success$success, type = "s", lwd = "2", ylim = c(0, 10.0))
lines(success$threshold, success$success_loo, type = "s", lwd = "2", col = "cyan")
lines(success$threshold, success$success_valid, type = "s", lwd = "2", col = "blue")
plot(success$threshold, success$success, type = "s", lwd = "2", ylim = c(0, 5.0))
lines(success$threshold, success$success_loo, type = "s", lwd = "2", col = "cyan")
lines(success$threshold, success$success_valid, type = "s", lwd = "2", col = "blue")
success <- NULL
success_loo <- NULL
success_valid <- NULL
incr <- 0.05
incr2 <- incr/2
threshold <- seq(0.3, 1, incr)
for (t in threshold){
lower <- t+incr2
upper <- t-incr2
which <- tmp$max_tanimoto < lower & tmp$max_tanimoto > upper
success <- c(success, mean(tmp$rmsd_pred[which], na.rm = TRUE))
which <- tmp_loo$max_tanimoto < lower & tmp_loo$max_tanimoto > upper
success_loo <- c(success_loo, mean(tmp_loo$rmsd_pred[which], na.rm = TRUE))
which <- tmp_valid$max_tanimoto < lower & tmp_valid$max_tanimoto > upper
success_valid <- c(success_valid, mean(tmp_valid$rmsd_pred[which], na.rm = TRUE))
}
success <- data.frame(threshold, success, success_loo, success_valid)
plot(success$threshold, success$success, type = "s", lwd = "2", ylim = c(0, 5.0))
lines(success$threshold, success$success_loo, type = "s", lwd = "2", col = "cyan")
lines(success$threshold, success$success_valid, type = "s", lwd = "2", col = "blue")
plot(success$threshold, success$success, type = "s", lwd = "2", ylim = c(0, 10.0))
lines(success$threshold, success$success_loo, type = "s", lwd = "2", col = "cyan")
lines(success$threshold, success$success_valid, type = "s", lwd = "2", col = "blue")
cor(tmp_valid$rmsd_pred, tmp_valid$max_tanimoto, method = "kendall")
cor(tmp_valid$rmsd_pred, tmp_valid$mean_tanimoto, method = "kendall")
